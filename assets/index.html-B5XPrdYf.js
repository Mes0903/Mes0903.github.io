import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as p,g as l,h as n,f as i,k as r,i as e,j as t,r as k,o as d}from"./app-CHKuTo5H.js";const o={};function c(g,s){const a=k("center");return d(),p("div",null,[s[19]||(s[19]=l('<h2 id="ros1-tutorial-introduction" tabindex="-1"><a class="header-anchor" href="#ros1-tutorial-introduction"><span>ROS1 Tutorial Introduction</span></a></h2><p>此篇為中央大學數學系上課所用的 ROS 教材，若非修課生，Demo 部分需要注意一下自己的機器人設定。 若發現教材有誤，歡迎直接修改</p><p>主要更新以 hackmd 為主：<a href="https://hackmd.io/@Mes/RosTutorial_Intro" target="_blank" rel="noopener noreferrer">https://hackmd.io/@Mes/RosTutorial_Intro</a></p><h2 id="什麼是-ros" tabindex="-1"><a class="header-anchor" href="#什麼是-ros"><span>什麼是 ROS?</span></a></h2><p>ROS 全名叫 Robot Operating System，但它其實是一種中介軟體(Middleware)，妳也可以說它是一個軟體框架(Software Framework)，所以他是一種抽象化的概念，不是應用程式，也不是作業系統</p><p>那它主要會幫我們連結各個軟體和零件之間的溝通，並且會提供一些 logging 的工具，那機器人的中介軟體有很多，像是 ROS、JAUS、Mira 等等</p>',6)),n(a,null,{default:e(()=>s[0]||(s[0]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/middleware.png?raw=true",width:"200px"},null,-1)])),_:1}),s[20]||(s[20]=l('<h2 id="為什麼需要-ros" tabindex="-1"><a class="header-anchor" href="#為什麼需要-ros"><span>為什麼需要 ROS?</span></a></h2><h3 id="最一開始的狀況" tabindex="-1"><a class="header-anchor" href="#最一開始的狀況"><span>最一開始的狀況</span></a></h3><p>最一開始大家都各寫各的，但要寫機器人是一件非常困難的事，妳需要熟知如何撰寫每種零件的 code，當然，有大神克服了，完成了很多作品</p><p>然而當日子一久，機器人技術的規模和範圍不斷擴大，零件也越來越多，此時前面那位大神的 code 在別人手上可能就跑不起來了，因為零件不同</p><p>這會造成一個問題，就算是同樣的功能的 code，由於每個人的零件不同，所以都還要再重寫一次，這就導致了代碼的重用性很低(重造輪子)，而且這類 code 的規模很大，而且還是需要從驅動層級開始寫的，因此非常不方便，且需要非常高的專業能力</p><h3 id="框架" tabindex="-1"><a class="header-anchor" href="#框架"><span>框架</span></a></h3><p>因此就有人提出了框架的想法，什麼是框架? 框架是一種規則(思想)，其實就是某種半成品，框架提供了一個基礎的架構，就好像房子的地基和骨架一樣，必須配合妳自己寫的 code 才能生出一個完整的應用程式</p><p>好處就是整個結構可以被<span class="yellow">重複使用</span>，如果有了框架，那麼做東西就不需要再從頭建造了</p><p>而前面也提到 ROS 算是一種軟體框架，ROS 幫我們把硬體與軟體之間的溝通都做好了，我們只需要寫我們「溝通的過程/效用」就好，而不用再從「溝通的原理」開始寫，也因此我們可以專注於開發演算法及其應用，同時也降低了高度專業能力的限制</p><h2 id="ros-的架構" tabindex="-1"><a class="header-anchor" href="#ros-的架構"><span>ROS 的架構</span></a></h2><h3 id="peer-to-peer-p2p" tabindex="-1"><a class="header-anchor" href="#peer-to-peer-p2p"><span>Peer to peer (P2P)</span></a></h3><p>ROS 主要是依靠 P2P 架構實作的，講這個之前先讓大家稍微理解一下簡單的主從式架構：</p>',12)),n(a,null,{default:e(()=>s[1]||(s[1]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/p2p1.png?raw=true"},null,-1),i("p",null,[t("(image source："),i("a",{href:"https://en.wikipedia.org/wiki/Client%E2%80%93server_model",target:"_blank",rel:"noopener noreferrer"},"wikipedia"),t(")")],-1)])),_:1}),s[21]||(s[21]=i("br",null,null,-1)),s[22]||(s[22]=i("p",null,"客戶端(clients) 會去向伺服器請求資料，這邊這個伺服器裡面有很多資料，像是客戶的帳密、金額，或是你遊戲帳號裡面的寶物有哪些之類的。以早期的線上遊戲來說，每次客戶端有更改資料的動作時都會發送一個請求(request) 給伺服器，假設你打了怪，賺到了 10 元，它就會把這個資訊送到伺服器上，伺服器就會幫你記錄下來",-1)),s[23]||(s[23]=i("p",null,"而如果拿網頁舉例子，像是 FB，妳點了某個人的個人頁面，妳就會向伺服器發送一個請求(request)，伺服器收到這個請求後就會知道妳要進入這個人的個人頁面，因此將妳導向這個人的個人頁面，妳就成功進去了",-1)),s[24]||(s[24]=i("p",null,"因此伺服器的權限非常的大，並且可以處理非常多的東西",-1)),s[25]||(s[25]=i("p",null,"但這會有一個問題，那就是如果發送請求的人非常多，且請求發送的非常頻繁，那麼伺服器的速度可能就會變得非常慢，甚至當機掛掉，DDoS 的原理就是這樣",-1)),s[26]||(s[26]=i("p",null,"那如果 ROS 使用了主從式架構，很有可能也會有類似的問題，因此 ROS 使用的是 Peer-To-Peer (一種分散式系統架構)，Middleware 通常都會是分散式系統架構：",-1)),n(a,null,{default:e(()=>s[2]||(s[2]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/p2p2.png?raw=true"},null,-1),i("p",null,[t("(image source："),i("a",{href:"https://ithelp.ithome.com.tw/articles/10216158",target:"_blank",rel:"noopener noreferrer"},"link"),t(")")],-1)])),_:1}),s[27]||(s[27]=i("br",null,null,-1)),s[28]||(s[28]=i("p",null,"在這種架構下，每台電腦(節點)都同時是客戶端與伺服器端，所有人都負責儲存了全部或部分的所有資料，並且也都會處理收到的請求",-1)),s[29]||(s[29]=i("p",null,"這樣做的優點是能夠擁有很好的平行處理能力，效能也會比較好，缺點是如果規模太大整個網路會很亂，且會很吃網路，但因為機器人的網路規模通常很小，所以不太會有這個問題，另一個缺點就是安全性，如果沒有做特別的處理，傳輸的文件可能會被動手腳，或是失真",-1)),s[30]||(s[30]=i("p",null,"那 p2p 有一些變型，這邊舉三個例子，看下面這張圖：",-1)),n(a,null,{default:e(()=>s[3]||(s[3]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/p2p3.png?raw=true"},null,-1),i("p",null,[t("(image source："),i("a",{href:"https://www.researchgate.net/figure/P2P-architectures-at-a-glance-a-Centralized-architecture-b-Pure-P2P-architecture_fig2_332539196",target:"_blank",rel:"noopener noreferrer"},"link"),t(")")],-1)])),_:1}),s[31]||(s[31]=l("<br><p>上面這三個分別為</p><ol><li><p>中心化P2P</p><p>英文為 Centralized P2P architecture</p><ul><li>有一個中心伺服器來幫忙連結溝通其他節點的訊息資料，並對這些請求做出回應 (但本身並不保存檔案)</li><li>節點負責處理、發布訊息資料，讓中心伺服器知道節點需要什麼檔案、資料，讓其他節點下載資源</li><li>有 index 可以找到絕對地址</li></ul><p>例子像是最初的 Napster</p></li><li><p>純P2P</p><p>英文為 Pure P2P architecture</p><ul><li>節點同時是客戶端和伺服器端</li><li>沒有中心伺服器</li></ul><p>例子像是 Gnutella</p></li><li><p>混合型P2P</p><p>英文為 Hybrid P2P architecture</p><ul><li>有多個伺服器來處理其他節點的訊息資料</li><li>同時有上面兩個的特性</li></ul><p>例子像是 Skype</p></li></ol><p>那麼 ROS 的架構是第一種，Centralized P2P：</p>",4)),n(a,null,{default:e(()=>s[4]||(s[4]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/p2p4.png?raw=true"},null,-1),i("p",null,"(image source：RSL ROS Tutorial)",-1)])),_:1}),s[32]||(s[32]=l(`<br><p>我們會有一片樹梅派來跑 server 的 code，或是像我們一樣用主機來跑 server 的 code，然後各個零件能夠互相傳遞、存取資料</p><h3 id="架構及名詞解釋" tabindex="-1"><a class="header-anchor" href="#架構及名詞解釋"><span>架構及名詞解釋</span></a></h3><p>現在我們已經知道 ROS 是用 P2P 來實作的了，那麼現在我們要來簡單看一下這些東西在 ROS 裡面的名詞及概念</p><h4 id="node" tabindex="-1"><a class="header-anchor" href="#node"><span>Node</span></a></h4><p>在 ROS 裡面，P2P 架構裡面的一個節點我們叫他 Node，Node 是一個你跑起來的程序(Process)，一個完整的系統會有很多個 Node</p><p>一個 Node 通常會是有單一功能的 Process，當然妳一個 Node 要有很多功能也可以，總之核心概念就是模組化(Modular Design)</p><p>舉個例子，一個簡單的導航程式，裡面可能是有一個 Node 是操控雷達，一個 Node 操控馬達、輪子，一個 Node 計算自己的定位(Localization)，一個 Node 來計算路徑規劃，一個 Node 顯示圖形介面，等等</p><p>所以你可以看見它其實就是很多個 Process 組合起來的，那麼這些 code 妳可以用 roscpp 或 rospy 來寫，好像還有其他另外支援的語言套件，但我只熟這兩個了</p><h4 id="master" tabindex="-1"><a class="header-anchor" href="#master"><span>Master</span></a></h4><p>Master 是一個特殊的 Node，也就是我們前面所說的 Server，Master 會幫忙查找 Node，紀錄妳想傳遞的訊息的種類等等</p><p>如果沒有 Master，<span class="yellow">Node 與 Node 間會找不到對方</span>，妳的資料傳遞、設備呼叫請求等等的溝通就會失效</p><h4 id="messages" tabindex="-1"><a class="header-anchor" href="#messages"><span>Messages</span></a></h4><p>上面有說一個完整的系統會有很多個 Node，那麼 <span class="yellow">Node 間要傳遞資料需要靠 Messages 來溝通</span></p><p>Message 是一種資料結構，裡面會有 type field，type field 通常指的是一個基類(base class) 裡面的變數，這個變數會拿來當作子類的 type 來使用，舉個例子(<a href="https://stackoverflow.com/questions/9147101/what-are-type-fields" target="_blank" rel="noopener noreferrer">來源</a>)：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Pet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  public:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> PetType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Bird</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Fish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ToString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ( type ) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PetType::Dog:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                std::cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Dog&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> std::endl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PetType::Cat:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                std::cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Cat&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> std::endl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PetType::Bird:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                std::cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Bird&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> std::endl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PetType::Fish:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                std::cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Fish&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> std::endl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  protected:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    PetType type;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // A type field.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Pet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  public:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() { type </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PetType::Dog; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Pet</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Dog d;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( d );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 <code>Pet::type</code> 就是一個 type field，在 Dog 這個子類裡面我們用 <code>type</code> 來當作了它的型態</p><p>Messeage 裡面可以有標準的基本型態，整數、浮點數、布林值之類的，也可以是基本型態的陣列，且 Message 內可以包含巢狀類(nested class)</p><h4 id="topic" tabindex="-1"><a class="header-anchor" href="#topic"><span>Topic</span></a></h4><p>Message 在發布時我們會給它加上 Topic，妳可以把 Message 想像成一個箱子，Node 間要傳遞資料時會把資料放到這個箱子裡面，並在這個箱子上面貼上一個標籤，這個標籤就是 Topic</p><p>覺得太抽象的話可以看下面那個小節的圖</p><h4 id="publisher-subscriber" tabindex="-1"><a class="header-anchor" href="#publisher-subscriber"><span>Publisher &amp; Subscriber</span></a></h4><p>讓我們先小整理一下，Message 是 Node 間拿來溝通的工具，因此 Message 由 Node 發布，也由 Node 接收</p><p>於是在 ROS 裡面，發布 Message 出來的 Node 我們叫它 Publisher，接收 Message 的 Node 我們叫它 Subscriber，看看下面這張圖：</p>`,24)),n(a,null,{default:e(()=>s[5]||(s[5]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/pub_sub1.png?raw=true"},null,-1)])),_:1}),s[33]||(s[33]=i("br",null,null,-1)),s[34]||(s[34]=i("p",null,"Node 會通過 Topic 來找要接收它需要的訊息，我們稱之為訂閱，例如規劃路徑的 Node 希望和雷達的 Node 拿掃到的資料，那麼規劃路徑的 Node 就是 Subscriber，雷達的 Node 則是 Publisher",-1)),s[35]||(s[35]=i("p",null,"而 Message 裡面可能裝很多個整數的陣列，Topic 可能是「雷達資料」，以上方那個圖來說就是：",-1)),n(a,null,{default:e(()=>s[6]||(s[6]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/pub_sub2.png?raw=true"},null,-1)])),_:1}),s[36]||(s[36]=i("br",null,null,-1)),s[37]||(s[37]=i("p",null,"而同一種 Topic 的 Message 也可以由不同的 Node 發布，也就是有不同的 Publisher 發布同樣 Topic 的 Message； 例如妳雷達有兩顆，而且妳為他們寫了兩個 Node，那麼這兩個 Node 都可以發布「雷達資料」這種 Topic 的 Message：",-1)),n(a,null,{default:e(()=>s[7]||(s[7]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/pub_sub3.png?raw=true"},null,-1)])),_:1}),s[38]||(s[38]=i("br",null,null,-1)),s[39]||(s[39]=i("p",null,"同理，同一種 Topic 的 Message 也可以有不同的 Node 訂閱，有就是有不同的 Subscriber 訂閱同樣 Topic 的 Message； 例如規劃路徑的 Node 需要雷達的資料，建地圖的 Node 也需要雷達的資料，那這兩個 Node 都可以訂閱「雷達資料」這種 Topic 的 Message",-1)),n(a,null,{default:e(()=>s[8]||(s[8]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/pub_sub4.png?raw=true"},null,-1)])),_:1}),s[40]||(s[40]=i("br",null,null,-1)),s[41]||(s[41]=i("p",null,"如果一個 Node 同時在收資料與發資料，那這個 Node 就同時是 Subcriber 與 Publisher",-1)),s[42]||(s[42]=i("h4",{id:"資訊的傳遞",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#資訊的傳遞"},[i("span",null,"資訊的傳遞")])],-1)),s[43]||(s[43]=i("p",null,"實際上在傳遞資訊時還會需要 Master 來幫忙 Node 之間的通訊，那麼 ROS 的訊息傳送時是使用 TCP/IP 協定的連線，且一旦兩個訊息接起來後就不會再經過 Master 了：",-1)),n(a,null,{default:e(()=>s[9]||(s[9]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/pub_sub5.png?raw=true"},null,-1)])),_:1}),s[44]||(s[44]=l('<br><p>一開始 Publisher 會先去向 Master 註冊，然後 Publisher 就會開始發布它的訊息(封包)；而當 Subscriber 需要相對應的訊息時就會去詢問 Master，那當它訂閱到那個 Topic 時它們就建立了連線，不再透過 Master 來傳遞資訊</p><p>所以 Master 會負責 Node 之間的通訊，他們之間是 TCP/IP 協定的連線</p><p>而因為 Middleware 會做序列化(Serialization)，所以你 C++ 寫出來的 Node 和 Python 寫出來的 Node 也可以溝通</p><h4 id="package" tabindex="-1"><a class="header-anchor" href="#package"><span>Package</span></a></h4><p>Package 是一個 ROS 軟體的基本單位，Package 會有裡面會有很多個 Node，然後可能會包含有相關的函式庫、資料集(dataset)、配置文件(configuration file)，或其他能幫助你整合、規劃專案的檔案</p><p>換句話說，Package 是妳在建立和發布專案時最基本的單位，因為妳的專案很可能是程式與程式之間在溝通的，妳把那些 Node 整合起來，配合妳自己寫的函式庫，蒐集的資料等等的，整個包裝起來成一個能讓別人使用的程式，這樣的東西就是一個 Package</p><h2 id="demo-by-og" tabindex="-1"><a class="header-anchor" href="#demo-by-og"><span>Demo (By OG)</span></a></h2><p><a href="https://drive.google.com/file/d/1nWaeKfHHkiT3zIVUx9jwq7ZCGFq6MHf3/view?usp=share_link" target="_blank" rel="noopener noreferrer">VB image</a></p><h2 id="ubuntu-linux" tabindex="-1"><a class="header-anchor" href="#ubuntu-linux"><span>Ubuntu &amp; Linux</span></a></h2><p>Ubuntu 是基於 Debian，以桌面應用為主的 Linux 發行版。Ubuntu 有三個正式版本，包括電腦版、伺服器版及用於物聯網裝置和機器人的 Core 版。前述三個版本既能安裝於實體電腦，也能安裝於虛擬電腦</p><h3 id="terminal-cli" tabindex="-1"><a class="header-anchor" href="#terminal-cli"><span>Terminal &amp; CLI</span></a></h3>',12)),n(a,null,{default:e(()=>s[10]||(s[10]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/terminal.png?raw=true"},null,-1)])),_:1}),s[45]||(s[45]=l(`<br><h4 id="linux-基本指令" tabindex="-1"><a class="header-anchor" href="#linux-基本指令"><span>linux 基本指令 ：</span></a></h4><ul><li>cd：用以移動到目標路徑</li><li>cp：複製檔案到指定路徑</li><li>mv：移動檔案到指定路徑</li><li>rm：刪除檔案</li><li>ls：顯示當前路徑下的資料夾與檔案</li><li>nano：一種 CLI 的編輯軟體</li><li>vim：一種 CLI 的編輯軟體</li></ul><h4 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh"><span>SSH ：</span></a></h4><p>Secure Shell 是一種加密的網路傳輸協定，可在不安全的網路中為網路服務提供安全的傳輸環境。 SSH 通過在網路中建立安全隧道來實現 SSH 客戶端與伺服器之間的連接。<strong>SSH最常見的用途是遠端登入系統</strong>，人們通常利用 SSH 來傳輸命令列介面和遠端執行命令</p><p>使用方式如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> username@server_location</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> port</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中</p><ul><li>username：遠端操作時的使用者帳號</li><li>server_location：你要連接的電腦，可能是ip或URI</li><li>port：ssh 專用的port，預設為22</li></ul><p>請注意，接下來開始會有兩台主機進行運作。一台是你的電腦，一台是機器人</p><p>請留意你到底是在哪台機器上操作！！！</p><h2 id="ros" tabindex="-1"><a class="header-anchor" href="#ros"><span>ROS</span></a></h2><h2 id="roscore-rosrun-roslaunch" tabindex="-1"><a class="header-anchor" href="#roscore-rosrun-roslaunch"><span>roscore &amp; rosrun &amp; roslaunch</span></a></h2><p>在運行 node 之前都必須先啟動 master，master 就是 ROS 系統中負責管理 Node 的一個功能，他負責 node 與 node 之間的溝通橋樑，因此在執行 node 之前一定要先把 master 開啟。 然後在 ros 中提供兩種方法去執行你的 Node，一種是 rosrun、一種是 roslaunch</p><h3 id="roscore" tabindex="-1"><a class="header-anchor" href="#roscore"><span><a href="http://wiki.ros.org/roscore" target="_blank" rel="noopener noreferrer">roscore</a></span></a></h3><p>roscore 可以讓你啟動 master</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roscore</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="rosrun" tabindex="-1"><a class="header-anchor" href="#rosrun"><span><a href="http://wiki.ros.org/rosbash#rosrun" target="_blank" rel="noopener noreferrer">rosrun</a></span></a></h3><p>rosrun可以讓你去執行特定package下的code，使用方法如下</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosrun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">packag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">executabl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## example</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosrun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hypharos_minibot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="roslaunch" tabindex="-1"><a class="header-anchor" href="#roslaunch"><span><a href="http://wiki.ros.org/roslaunch" target="_blank" rel="noopener noreferrer">roslaunch</a></span></a></h3><p>roslaunch 則透過預先設定的 launch file 幫你一次開啟很多程式</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 因為launch file 是放在某個package底下，還是要加package</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roslaunch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">packag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">launch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## example</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roslaunch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hypharos_minibot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project_sample.launch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rosnode-rostopic" tabindex="-1"><a class="header-anchor" href="#rosnode-rostopic"><span>rosnode &amp; rostopic</span></a></h2><p>在 ros 中你可以使用以下兩種指令去檢視正在運行的 node 及 topic</p><ul><li><code>rosnode</code> 動作 參數</li><li><code>rostopic</code> 動作 參數</li></ul><h3 id="rosnode" tabindex="-1"><a class="header-anchor" href="#rosnode"><span><a href="http://wiki.ros.org/rosnode" target="_blank" rel="noopener noreferrer">rosnode</a></span></a></h3><p>在 rosnode 中提供以下幾種動作可以使用</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosnode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># print information about node</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosnode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kill a running node</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosnode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                   # list active nodes</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosnode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> machine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">machine-nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># list nodes running on a particular machine or list machines</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosnode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># test connectivity to node</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosnode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cleanup</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                # purge registration information of unreachable nodes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rostopic" tabindex="-1"><a class="header-anchor" href="#rostopic"><span><a href="http://wiki.ros.org/rostopic" target="_blank" rel="noopener noreferrer">rostopic</a></span></a></h3><p>在 rostopic 中提供以下幾種動作可以使用</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># display bandwidth used by topic</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># display delay for topic which has header</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># print messages to screen</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">msg-typ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># find topics by type</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># display publishing rate of topic</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic_nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># print information about active topic</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                                     # print information about active topics</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic-nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">msg-typ</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; [data...]    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># publish data to topic</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rostopic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topic-nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;                        </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># print topic type</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="機器人初連接" tabindex="-1"><a class="header-anchor" href="#機器人初連接"><span>機器人初連接</span></a></h2><h3 id="turtlesim" tabindex="-1"><a class="header-anchor" href="#turtlesim"><span>Turtlesim</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## initialize ros master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roscore</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## launch turtlesim_node</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosrun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> turtlesim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> turtlesim_node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## using keyboard to control the turtle</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rosrun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> turtlesim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> turtle_teleop_key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35)),n(a,null,{default:e(()=>s[11]||(s[11]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/robot.png?raw=true"},null,-1)])),_:1}),s[46]||(s[46]=l('<br><h3 id="minibot-turtlebot" tabindex="-1"><a class="header-anchor" href="#minibot-turtlebot"><span>Minibot &amp; Turtlebot</span></a></h3><h4 id="網路設定" tabindex="-1"><a class="header-anchor" href="#網路設定"><span>網路設定</span></a></h4><p>筆電網卡設定</p><p><strong>--&gt;ipv4--&gt;ip :10.0.0.2--&gt;mask :255.255.255.0--&gt;store</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gedit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',6)),n(a,null,{default:e(()=>s[12]||(s[12]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/setting1.png?raw=true"},null,-1)])),_:1}),s[47]||(s[47]=l('<br><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',2)),n(a,null,{default:e(()=>s[13]||(s[13]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/setting2.png?raw=true"},null,-1)])),_:1}),s[48]||(s[48]=l(`<br><h4 id="連線" tabindex="-1"><a class="header-anchor" href="#連線"><span>連線</span></a></h4><p>使用新版VM</p><p>啟動機器人的指令，一定要在機器人上執行!!</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## ssh連接機器人</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pi@10.0.0.1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ##passward=mrlrobot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 假如是minibot下</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roslaunch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hypharos_minibot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project_sample.launch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 假如是turtlebot下</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roslaunch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> turtlebot3_bringup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> turtlebot3_robot.launch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>起動 rviz 視覺化套件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rviz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>遙控機器人</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## Extra moving !!!</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 假如是minibot下</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roslaunch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> teleop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> teleop_key.launch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> model:=minibot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 假如是turtlebot下</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">roslaunch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> teleop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> teleop_key.launch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> model:=turtlebot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你長時間都會使用某一台機器人，你可以透過更改環境變數來設定預設機器人</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gedit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>找到以下這兩行(139行以及140行)</p><p>可以看到現在預設是使用 minibot，你若是想預設 turtlebot 只要將 139 行反註解、140 行註解掉即可</p>`,13)),n(a,null,{default:e(()=>s[14]||(s[14]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/setting3.png?raw=true"},null,-1)])),_:1}),s[49]||(s[49]=i("br",null,null,-1)),r(" ### minibot\n```bash\n#ssh連接機器人\nssh pi@10.0.0.1 ##passward=mrlrobot \nroslaunch hypharos_minibot project_sample.launch# 這是啟動機器人的指令，一定要在機器人上執行！！！\n```\n起動 rviz 視覺化套件\n```bash\nrviz\n```\n遙控機器人\n```bash\n#Extra moving !!!\nssh pi@10.0.0.1 ##passward=mrlrobot \nrosrun hypharos_minibot teleop_keyboard.py # 在機器人上執行\n```\n#### turtlebot\n```bash\n#ssh連接機器人\nssh pi@10.0.0.1 ##passward=mrlrobot  \nroslaunch turtlebot3_sample sample.launch # 這是啟動機器人的指令，一定要在機器人上執行！！！\n```\n起動 rviz 視覺化套件\n```bash\nrviz\n```\n遙控機器人\n```bash\n#Extra moving !!!\nroslaunch turtlebot3_teleop turtlebot3_teleop_key.launch\n``` "),s[50]||(s[50]=i("h4",{id:"你一定會遇到的問題",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#你一定會遇到的問題"},[i("span",null,"你一定會遇到的問題")])],-1)),n(a,null,{default:e(()=>s[15]||(s[15]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/setting4.png?raw=true"},null,-1)])),_:1}),s[51]||(s[51]=l('<br><p>這代表你電腦中儲存的 Key 跟機器人上的不符合，你就執行他提示的指令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ssh-keygen -f ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>去把它移除，再重新 ssh</p><h2 id="catkin" tabindex="-1"><a class="header-anchor" href="#catkin"><span>catkin</span></a></h2><h3 id="簡介" tabindex="-1"><a class="header-anchor" href="#簡介"><span>簡介</span></a></h3><p>catkin 是一個開發環境整合套件，C++ 中的 make 幫我們做到在編譯這個層級做整合。在不使用 IDE 的情況下，我們如果要編譯一個 c code 或一個 c project 時需要手動透過指令執行，而當這你的 code import 的函式庫很多或你的 project 很大時需要輸入的指令就會變得十分的複雜</p><p>此時 make 這個套件就可以讓我們透過設定一個簡單的 makefile 讓編譯器自動地去建構你所撰寫的project。makefile 會將程式分成好幾個模組，根據裡面的目標 (target)、規則 (rule) 和檔案的修改時間進行判斷哪些需要重新編譯，可以省去大量重複編譯的時間，這在大型程式中尤為有用</p><p>而 catkin 這個套件則在 make 的基礎上加入了空間上的整合，讓你整個專案的開發有個統一的格式</p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><p>catkin 大致上把一個工作區劃分為以下三個區塊</p><ul><li>src<br> 用來存放 source code 以及各個 project 的地方，src 中的存放單位為 package</li><li>build<br> 用來放程式碼在編譯過程中的中間產物</li><li>devel<br> 編譯完的執行檔跟一些環境變數設定檔都會放置在這</li></ul>',12)),n(a,null,{default:e(()=>s[16]||(s[16]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/catkin1.png?raw=true"},null,-1)])),_:1}),s[52]||(s[52]=i("br",null,null,-1)),s[53]||(s[53]=i("p",null,"後兩個路徑由 catkin 系統自動生成、管理，我們日常的開發一般不會去涉及，而主要用到的是 src 資料夾，我們寫的 ROS 程式、網上下載的 ROS 原始碼包都存放在這裡",-1)),s[54]||(s[54]=i("p",null,[t("在編譯時，catkin 編譯系統會遞迴的查詢和編譯 "),i("code",null,"src/"),t(" 下的每一個原始碼包。因此你也可以把幾個原始碼包放到同一個資料夾下，如下圖所示：")],-1)),n(a,null,{default:e(()=>s[17]||(s[17]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/catkin2.png?raw=true"},null,-1)])),_:1}),s[55]||(s[55]=l(`<br><h4 id="package結構" tabindex="-1"><a class="header-anchor" href="#package結構"><span>package結構</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── CMakeLists.txt    # package的編譯規則(必須)</span></span>
<span class="line"><span>├── package.xml       # package的描述資訊(必須)</span></span>
<span class="line"><span>├── src/              # 原始碼檔案</span></span>
<span class="line"><span>├── include/          # C++標頭檔案</span></span>
<span class="line"><span>├── scripts/          # 可執行指令碼</span></span>
<span class="line"><span>├── msg/              # 自定義訊息</span></span>
<span class="line"><span>├── srv/              # 自定義服務</span></span>
<span class="line"><span>├── models/           # 3D模型檔案</span></span>
<span class="line"><span>├── urdf/             # urdf檔案</span></span>
<span class="line"><span>├── launch/           # launch檔案</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="package的建立" tabindex="-1"><a class="header-anchor" href="#package的建立"><span>package的建立</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">catkin_create_pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test_pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> roscpp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rospy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> std_msgs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>建立一個 package 需要在 <code>catkin_ws/src</code> 下，用到 <code>catkin_create_pkg</code> 命令，用法是：<code>catkin_create_pkg package depends</code>，其中 <code>package</code> 是包名，<code>depends</code> 是依賴的包名，可以依賴多個軟體包</p><p>例如，新建一個 package 叫做 test_pkg，依賴 roscpp、rospy、std_msgs(常用依賴)<br> 新建完後就可在 <code>src</code> 中撰寫你的程式碼嘍</p><h4 id="編譯package" tabindex="-1"><a class="header-anchor" href="#編譯package"><span>編譯package</span></a></h4><p>回到 catkin workspace(catkin_ws) 這層後輸入</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">catkin_make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>他就會自動幫你編譯所有 package</p>`,11)),n(a,null,{default:e(()=>s[18]||(s[18]=[i("img",{src:"https://github.com/Mes0903/MesBlog/blob/vuepress-theme-hope/src/ROS/ROS_Tutorial_Introduction/image/catkin3.png?raw=true"},null,-1)])),_:1}),s[56]||(s[56]=l(`<br><p>編譯完後記得執行以下指令加入環境變數，不然你在 Terminal 上找不到你要執行的 code 喔</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/catkin_ws/devel/setup.bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="roscpp" tabindex="-1"><a class="header-anchor" href="#roscpp"><span>roscpp</span></a></h2><p>ROS 中的 CPP 檔是放置在 package 中的 src</p><h4 id="package結構-1" tabindex="-1"><a class="header-anchor" href="#package結構-1"><span>package結構</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── CMakeLists.txt    #package的編譯規則(必須)</span></span>
<span class="line"><span>├── package.xml       #package的描述資訊(必須)</span></span>
<span class="line"><span>├── src/              #原始碼檔案</span></span>
<span class="line"><span>├── include/          #C++標頭檔案</span></span>
<span class="line"><span>├── scripts/          #可執行指令碼</span></span>
<span class="line"><span>├── msg/              #自定義訊息</span></span>
<span class="line"><span>├── srv/              #自定義服務</span></span>
<span class="line"><span>├── models/           #3D模型檔案</span></span>
<span class="line"><span>├── urdf/             #urdf檔案</span></span>
<span class="line"><span>├── launch/           #launch檔案</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="node-simple-sample" tabindex="-1"><a class="header-anchor" href="#node-simple-sample"><span>node simple sample</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/catkin_ws/src/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">your_pk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/src</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 到你的 project 中的 src 中，src 是用來存放 source code 的地方</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gedit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file_name.cpp</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 新增一個 cpp 檔，並編輯。就是開始打 code 啦</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;ros/ros.h&gt;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                             // 引用 ros.h 檔</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char**</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ros::init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello_cpp_node&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // 初始化 hello_cpp_node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ros::NodeHandle handler;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     // node 的 handler</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ROS_INFO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                    // 印出 Hello World</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>cpp 檔不像 python 檔一樣可以直接被執行，需要經過編譯以後才能轉成執行檔，因此我們需要修改 <code>beginner_tutorial</code> 內的 CMakeLists.txt ，為其設定好連結的函式庫<br> 由於他的 CMakeLists.txt 太長了，在此擷取片段做為參考:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/catkin_ws/src/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">your_pk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g&gt; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 到你的project中</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gedit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CMakeLists.txt</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 修改當中的 CMakeLists.txt，這是編譯的設定檔</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">//...上略</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### Declare a C++ executable</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(file_name src/file_name.cpp)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(file_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${catkin_LIBRARIES}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### Rename C++ executable without prefix</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">//...下略</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完 CMakeLists.txt 後，接著須回到工作區的根目錄，也就是 <code>/catkin_ws</code> 中再執行一次<code>catkin_make</code>，他就會自己幫我們編譯好 <code>file_name.cpp</code> 的執行檔(<code>file_name</code>)囉!</p><p>接下來修改 <code>file_name.cpp</code>，一樣新增一個迴圈，讓他在程式執行期間每秒印出一個 hello world出來，程式碼如下:</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;ros/ros.h&gt;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                             // 引用 ros.h 檔</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char**</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ros::init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello_cpp_node&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     // 初始化hello_cpp_node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ros::NodeHandle handler;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     // node 的 handler</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ros::ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()){</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                           // 在 ros 順利執行時</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ROS_INFO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                // 印出 Hello World</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ros::Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                // 間隔 1 秒</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完 <code>file_name.cpp</code> 後，因為 CMakeLists.txt 已經改好了，只要再回去執行一次 <code>catkin_make</code>，就可以重新編譯出一個新的 <code>file_name</code> 囉!</p><h4 id="教學傳送門" tabindex="-1"><a class="header-anchor" href="#教學傳送門"><span><a href="https://ithelp.ithome.com.tw/articles/10204122" target="_blank" rel="noopener noreferrer">教學傳送門</a></span></a></h4><h3 id="publisher-simple-sample" tabindex="-1"><a class="header-anchor" href="#publisher-simple-sample"><span><a href="http://wiki.ros.org/roscpp/Overview/Publishers%20and%20Subscribers" target="_blank" rel="noopener noreferrer">Publisher</a> simple sample</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ros/ros.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;std_msgs/String.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;sstream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> **</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ros::init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;talker&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ros::NodeHandle n;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ros::Publisher chatter_pub </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">advertise</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">std_msgs::String</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;chatter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ros::Rate </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">loop_rate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> count </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ros::ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    std_msgs::String msg;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    std::stringstream ss;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ss </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;hello world &quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> count;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> ss</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ROS_INFO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">c_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    chatter_pub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">publish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(msg);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ros::spinOnce</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    loop_rate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">count;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="教學傳送門-1" tabindex="-1"><a class="header-anchor" href="#教學傳送門-1"><span><a href="https://ithelp.ithome.com.tw/articles/10205657" target="_blank" rel="noopener noreferrer">教學傳送門</a></span></a></h4><h3 id="subscriber-simple-sample" tabindex="-1"><a class="header-anchor" href="#subscriber-simple-sample"><span><a href="http://wiki.ros.org/roscpp/Overview/Publishers%20and%20Subscribers" target="_blank" rel="noopener noreferrer">Subscriber</a> simple sample</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;ros/ros.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;std_msgs/String.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> chatterCallback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> std_msgs::String::ConstPtr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ROS_INFO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;I heard: [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">c_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> argc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> **</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ros::init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(argc, argv, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;listener&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ros::NodeHandle n;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ros::Subscriber sub </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;chatter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, chatterCallback);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ros::spin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="教學傳送門-2" tabindex="-1"><a class="header-anchor" href="#教學傳送門-2"><span><a href="https://ithelp.ithome.com.tw/articles/10205877" target="_blank" rel="noopener noreferrer">教學傳送門</a></span></a></h4><h2 id="rospy" tabindex="-1"><a class="header-anchor" href="#rospy"><span>rospy</span></a></h2><p>ROS 中的 Python 檔是放置在 package 中的 scripts！！！</p><h4 id="package結構-2" tabindex="-1"><a class="header-anchor" href="#package結構-2"><span>package結構</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── CMakeLists.txt    # package的編譯規則(必須)</span></span>
<span class="line"><span>├── package.xml       # package的描述資訊(必須)</span></span>
<span class="line"><span>├── src/              # 原始碼檔案</span></span>
<span class="line"><span>├── include/          # C++標頭檔案</span></span>
<span class="line"><span>├── scripts/          # 可執行指令碼</span></span>
<span class="line"><span>├── msg/              # 自定義訊息</span></span>
<span class="line"><span>├── srv/              # 自定義服務</span></span>
<span class="line"><span>├── models/           # 3D模型檔案</span></span>
<span class="line"><span>├── urdf/             # urdf檔案</span></span>
<span class="line"><span>├── launch/           # launch檔案</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="node-simple-sample-1" tabindex="-1"><a class="header-anchor" href="#node-simple-sample-1"><span>node simple sample</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/usr/bin/env python</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy                             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># import rospy 模組</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">init_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;hello_python_node&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化 hello_python_node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_shutdown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在 rospy 還沒結束前，執行下列指令:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">loginfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Hello World&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 印出 Hello World</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)                       </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 間隔 1 秒</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>編輯完code後幫code加權限</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file_name.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="教學傳送門-3" tabindex="-1"><a class="header-anchor" href="#教學傳送門-3"><span><a href="https://ithelp.ithome.com.tw/articles/10203798" target="_blank" rel="noopener noreferrer">教學傳送門</a></span></a></h4><h3 id="publisher-simple-sample-1" tabindex="-1"><a class="header-anchor" href="#publisher-simple-sample-1"><span><a href="http://wiki.ros.org/rospy/Overview/Publishers%20and%20Subscribers" target="_blank" rel="noopener noreferrer">Publisher</a> simple sample</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/usr/bin/env python</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## license removed for brevity</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> std_msgs.msg </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> String</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> talker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    pub </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Publisher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;chatter&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, String, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">queue_size</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">init_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;talker&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">anonymous</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rate </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Rate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 10hz</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_shutdown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        hello_str </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;hello world </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> %</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">loginfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hello_str)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        pub.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">publish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hello_str)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        rate.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;__main__&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">        talker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   except</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy.ROSInterruptException:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        pass</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="教學傳送門-4" tabindex="-1"><a class="header-anchor" href="#教學傳送門-4"><span><a href="https://ithelp.ithome.com.tw/articles/10205008" target="_blank" rel="noopener noreferrer">教學傳送門</a></span></a></h4><h3 id="subscriber-simple-sample-1" tabindex="-1"><a class="header-anchor" href="#subscriber-simple-sample-1"><span><a href="http://wiki.ros.org/rospy/Overview/Publishers%20and%20Subscribers" target="_blank" rel="noopener noreferrer">Subscriber</a> simple sample</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/usr/bin/env python</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rospy</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> std_msgs.msg </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> String</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">loginfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_caller_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;I heard </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, data.data)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> listener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">init_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;listener&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">anonymous</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Subscriber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;chatter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, String, callback)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # spin() simply keeps python from exiting until this node is stopped</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rospy.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">spin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;__main__&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    listener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="教學傳送門-5" tabindex="-1"><a class="header-anchor" href="#教學傳送門-5"><span><a href="https://ithelp.ithome.com.tw/articles/10205362" target="_blank" rel="noopener noreferrer">教學傳送門</a></span></a></h4><h2 id="robot-source-code-on-github" tabindex="-1"><a class="header-anchor" href="#robot-source-code-on-github"><span>Robot source code on github</span></a></h2><h3 id="minibot-sample-code" tabindex="-1"><a class="header-anchor" href="#minibot-sample-code"><span>minibot sample code</span></a></h3><p><a href="https://github.com/kuoshih/hypharos_minibot" target="_blank" rel="noopener noreferrer">https://github.com/kuoshih/hypharos_minibot</a></p><h3 id="turtlebot-sample-code" tabindex="-1"><a class="header-anchor" href="#turtlebot-sample-code"><span>turtlebot sample code</span></a></h3><p><a href="https://github.com/MathRoboticsLab/turtlebot3_sample" target="_blank" rel="noopener noreferrer">https://github.com/MathRoboticsLab/turtlebot3_sample</a></p><h3 id="python-for-tb3-minibot" tabindex="-1"><a class="header-anchor" href="#python-for-tb3-minibot"><span>Python for TB3 &amp; minibot:</span></a></h3><p><a href="https://github.com/MathRoboticsLab/hypharos_minibot_turtlebot_python_sample" target="_blank" rel="noopener noreferrer">https://github.com/MathRoboticsLab/hypharos_minibot_turtlebot_python_sample</a></p><h2 id="參考資料" tabindex="-1"><a class="header-anchor" href="#參考資料"><span>參考資料</span></a></h2><p><strong><a href="https://www.youtube.com/playlist?list=PL6S9AqLQkFprxJW18z1Nu9P2bnWCK4KmC" class="redlink">1. jserv ROS 教學</a></strong></p><p><strong><a href="http://wiki.ros.org/ROS/Introduction" class="redlink">2. ROS Introduction</a></strong></p><p><strong><a href="https://ai.stanford.edu/~mquigley/papers/icra2009-ros.pdf" class="redlink">3. ROS: an open-source Robot Operating System</a></strong></p><p><strong><a href="https://en.wikipedia.org/wiki/Peer-to-peer" class="redlink">4. Peer-to-peer wiki</a></strong></p><p><strong><a href="http://wiki.ros.org/" class="redlink">5. ROS WIKI</a></strong></p><p><strong><a href="https://www.itread01.com/content/1545152767.html" class="redlink">6. catkin tools</a></strong></p><p><strong><a href="https://ithelp.ithome.com.tw/users/20112348/ironman/1965" class="redlink">7. ROS自學筆記</a></strong></p><p><strong><a href="https://www.facebook.com/profile.php?id=100003209663210" class="redlink">8. 這人台大</a></strong></p>`,55))])}const y=h(o,[["render",c],["__file","index.html.vue"]]),b=JSON.parse(`{"path":"/ROS/ROS_Tutorial_Introduction/","title":"ROS Tutorial Introduction","lang":"en-US","frontmatter":{"title":"ROS Tutorial Introduction","date":"2021-11-17T00:00:00.000Z","tag":"ROS1","category":"ROS1","description":"ROS1 Tutorial Introduction 此篇為中央大學數學系上課所用的 ROS 教材，若非修課生，Demo 部分需要注意一下自己的機器人設定。 若發現教材有誤，歡迎直接修改 主要更新以 hackmd 為主：https://hackmd.io/@Mes/RosTutorial_Intro 什麼是 ROS? ROS 全名叫 Robot Ope...","head":[["meta",{"property":"og:url","content":"https://mes0903.github.io/ROS/ROS_Tutorial_Introduction/"}],["meta",{"property":"og:site_name","content":"Mes's Blog"}],["meta",{"property":"og:title","content":"ROS Tutorial Introduction"}],["meta",{"property":"og:description","content":"ROS1 Tutorial Introduction 此篇為中央大學數學系上課所用的 ROS 教材，若非修課生，Demo 部分需要注意一下自己的機器人設定。 若發現教材有誤，歡迎直接修改 主要更新以 hackmd 為主：https://hackmd.io/@Mes/RosTutorial_Intro 什麼是 ROS? ROS 全名叫 Robot Ope..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-26T11:24:15.000Z"}],["meta",{"property":"article:tag","content":"ROS1"}],["meta",{"property":"article:published_time","content":"2021-11-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-26T11:24:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ROS Tutorial Introduction\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-17T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-26T11:24:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mes\\",\\"url\\":\\"https://mes0903.github.io\\"}]}"]]},"git":{"createdTime":1740149490000,"updatedTime":1740569055000,"contributors":[{"name":"Mes","username":"Mes","email":"mes900903@gmail.com","commits":5,"url":"https://github.com/Mes"}]},"readingTime":{"minutes":19.73,"words":5919},"filePathRelative":"ROS/ROS_Tutorial_Introduction/README.md","localizedDate":"November 17, 2021","excerpt":"","autoDesc":true}`);export{y as comp,b as data};
